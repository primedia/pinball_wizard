// Generated by CoffeeScript 1.7.1
(function() {
  require(['pinball'], function(pinball) {
    beforeEach(function() {
      return pinball.reset();
    });
    describe('initialize', function() {
      return it('is defined', function() {
        return expect(pinball).toBeDefined();
      });
    });
    describe('#reset', function() {
      return it('removes all features', function() {
        pinball.add({
          a: {
            available: true,
            activatedByDefault: true
          }
        });
        pinball.reset();
        return expect(pinball.state()).toEqual({});
      });
    });
    describe('#add', function() {
      return it('is accessible via #get', function() {
        pinball.add({
          a: {
            available: true,
            activatedByDefault: true
          }
        });
        return expect(pinball.get('a')).toEqual({
          available: true,
          activated: false,
          activatedByDefault: true
        });
      });
    });
    describe('#publish', function() {});
    describe('#state', function() {
      return it('displays a list based on state', function() {
        pinball.add({
          a: {
            available: true,
            activatedByDefault: true
          },
          b: {
            available: true,
            activatedByDefault: false
          },
          c: {
            available: false,
            activatedByDefault: false
          }
        });
        return expect(pinball.state()).toEqual({
          a: {
            available: true,
            activated: false,
            activatedByDefault: true
          },
          b: {
            available: true,
            activated: false,
            activatedByDefault: false
          },
          c: {
            available: false,
            activated: false,
            activatedByDefault: false
          }
        });
      });
    });
    describe('#activate', function() {
      it('makes an available feature active', function() {
        pinball.add({
          a: {
            available: true,
            activatedByDefault: true
          }
        });
        pinball.activate('a');
        return expect(pinball.get('a')).toEqual({
          available: true,
          activated: true,
          activatedByDefault: true
        });
      });
      return it('does not make an unavailable feature active', function() {
        pinball.add({
          a: {
            available: false,
            activatedByDefault: false
          }
        });
        pinball.activate('a');
        return expect(pinball.get('a')).toEqual({
          available: false,
          activated: false,
          activatedByDefault: false
        });
      });
    });
    describe('#deactivate', function() {});
    describe('#activateFromList', function() {});
    describe('#isActivated', function() {});
    describe('#subscribe', function() {});
    describe('#debug', function() {});
    return jasmine.getEnv().execute();
  });

}).call(this);
