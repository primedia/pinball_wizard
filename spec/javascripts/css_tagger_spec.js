// Generated by CoffeeScript 1.7.1
(function() {
  require(['css_tagger'], function(tagger) {
    describe('css_tagger', function() {
      it('should add classes from the pinball async function queue', function() {
        var ele, pinballQueue;
        ele = document.createElement('div');
        pinballQueue = [['activate', 'my_feature']];
        tagger(ele, pinballQueue, '');
        return expect(ele.className).toEqual(' use-my-feature');
      });
      it('should add classes from query params', function() {
        var ele;
        ele = document.createElement('div');
        tagger(ele, [], '?pinball=feature_a,feature_b&other=param');
        return expect(ele.className).toEqual(' use-feature-a use-feature-b');
      });
      it('should not interfere with existing class names', function() {
        var ele;
        ele = document.createElement('div');
        ele.className = 'foo-bar';
        tagger(ele, [], '?pinball=feature_a,feature_b&other=param');
        return expect(ele.className).toEqual('foo-bar use-feature-a use-feature-b');
      });
      it('should add classes from added pinball features', function() {
        var ele, pinballQueue;
        ele = document.createElement('div');
        pinballQueue = [
          [
            'add', {
              feature_a: 'active',
              feature_b: 'inactive',
              feature_c: 'active'
            }
          ]
        ];
        tagger(ele, pinballQueue, '');
        return expect(ele.className).toEqual(' use-feature-a use-feature-c');
      });
      return it('should add classes from queue and query params', function() {
        var ele, pinballQueue;
        ele = document.createElement('div');
        pinballQueue = [
          [
            'add', {
              feature_a: 'active'
            }
          ], ['activate', 'feature_b'], ['something-odd']
        ];
        tagger(ele, pinballQueue, '?pinball=feature_c');
        return expect(ele.className).toEqual(' use-feature-a use-feature-b use-feature-c');
      });
    });
    return jasmine.getEnv().execute();
  });

}).call(this);

//# sourceMappingURL=css_tagger_spec.map
